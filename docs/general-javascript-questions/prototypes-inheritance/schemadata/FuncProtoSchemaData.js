const StructuredData = {
  '@context': 'https://schema.org',
  '@type': 'FAQPage',
  mainEntity: [
    {
      '@type': 'Question',
      name: 'What is the function.prototype property in JavaScript?',
      acceptedAnswer: {
        '@type': 'Answer',
        text: 'In simple terms, the function.prototype is a regular property in a function. Every Object in JavaScript contains the prototype meaning a regular property with the prototype name.',
      },
    },
    {
      '@type': 'Question',
      name: 'Can you explain how the function.prototype property works in JavaScript?',
      acceptedAnswer: {
        '@type': 'Answer',
        text: 'Even if we don\'t offer it, every function has the "prototype" attribute. When a new Function gets invoked, the function prototype property assigns the [[Prototype]] to the new object. After the function prototype property changes (func.prototype = &#123;another object&#125;), new objects generated by the new Function gets another object as [[Prototype]], while existing objects retains the previous one. A default prototype is an object with the sole constructor pointing back to the function itself.',
      },
    },
    {
      '@type': 'Question',
      name: 'What happens when you replace the default function prototype in JavaScript?',
      acceptedAnswer: {
        '@type': 'Answer',
        text: 'When you override the default prototype in an object, we lose access to the function constructor property of the prototype.',
      },
    },
  ],
};

export default StructuredData;
